Task 2: LaufzeitkomplexitÃ¤t

1. Die Funktionen gerade und verdopple rufen sich x mal selbst auf. Halbiere ruft sich x/2 mal auf.

2. gerade: b+1 mal	verdopple: a+1 mal	halbiere: (b/2)+1 mal ==> Anzahl Methodenaufrufe: (3b/2) + a + 3

3. num(x, y)  := (3y/2) + x + 3

Reihe der Aufrufe := num(a,b) + num(2a, b/2) + num(4a,b/4)... = sum{k = 0, to n = log2(b)+1} (num((2^k)a, (1/2^k)b)
==> Anzahl der Aufrufe: 4ab + 6b - (3/4b) - a + 3  
